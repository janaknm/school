#include <stdio.h>
#include <stdlib.h>

#include "proto.h"


/* parses a line read from shell into individual args. */
int arg_parse(char *line, char ***argvp)
{ 
    char   *c, *reader;
    char   **it;
    int    argc = 0, reading = 0;
    
    /* determine number of args */
    c = line;
    while ( *c ) {
        if ( *c == ' ') {
            /* read spaces */
            argc++;
            while ( *(++c) == ' ') 
                ;
        } else if ( *c == '"' ) {
            /* read quoted string */
            while ( *c && *(++c) != '"' )
                ;
        } else {
            /* read character */
            c++;
        }
    } 

    /* create array for args */
    *argvp = (char **)malloc(argc * sizeof(char *) + 1);
    if (!*argvp)
        perror("malloc");

    /* partition args and store positions of first characters */
    it = *argvp;
    c = reader = line;
    while ( *reader ) {
        printf("read: %c; reading? %d\n", *reader, reading);
        if (*reader == ' ' ) {
            if (reading) {
                reading = 0;
                *c = '\0';
            }
            while (*reader && *(++reader) == ' ')
                ;
        } else if ( *reader == '"' ) {
            /* if not reading, mark this as start of arg */
            if (!reading)
                *(it++) = c;
            /* read contents of quotes */
            reading = 1;
            while ( *reader && *(++reader) != '"' )
                *(c++) = *reader;
        } else {
            if (!reading) {
                reading = 1;
                *(it++) = c;
            }
            *(c++) = *(reader++);
        }
    }
    /* add null pointer to end of array */
    *it = (char *)0;

    it = *argvp;
    do {
        printf("%s\n", *it);
    } while (*(it++));
    
    return argc;
}
